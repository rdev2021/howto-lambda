---
name: Deploy Lambda Function

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install dependencies
        run: |
          if [ -f "requirements.txt" ]; then
            python -m pip install -r requirements.txt
          fi

      - name: Package Lambda function
        run: |
          mkdir -p deployment-package
          cp src/handler.py deployment-package/
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt -t deployment-package/
          fi
          cd deployment-package
          zip -r ../lambda-function.zip .

      - name: Check if Lambda function exists
        id: check_function
        run: |
          if aws lambda get-function --function-name howto-lambda --region ap-south-1; then
            echo "Function exists."
            echo "::set-output name=function_exists::true"
          else
            echo "Function does not exist."
            echo "::set-output name=function_exists::false"
          fi

      - name: Create Lambda function
        if: steps.check_function.outputs.function_exists == 'false'
        run: |
          ROLE_ARN="arn:aws:iam::${{ secrets.AWS_ACC_ID }}:role/MyLambdaExecutionRole"
          aws lambda create-function --function-name howto-lambda \
            --runtime python3.8 --role $ROLE_ARN \
            --handler lambda_function.lambda_handler --zip-file fileb://lambda-function.zip \
            --timeout 15 --memory-size 128 --region ap-south-1
          echo "Lambda function created."

      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name howto-lambda \
            --zip-file fileb://lambda-function.zip
